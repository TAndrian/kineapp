{"remainingRequest":"/home/lost/Bureau/OCI/kineapp/node_modules/babel-loader/lib/index.js!/home/lost/Bureau/OCI/kineapp/node_modules/eslint-loader/index.js??ref--14-0!/home/lost/Bureau/OCI/kineapp/src/model/Patient.js","dependencies":[{"path":"/home/lost/Bureau/OCI/kineapp/src/model/Patient.js","mtime":1642083239094},{"path":"/home/lost/Bureau/OCI/kineapp/babel.config.js","mtime":1641732054737},{"path":"/home/lost/Bureau/OCI/kineapp/node_modules/cache-loader/dist/cjs.js","mtime":1640273572679},{"path":"/home/lost/Bureau/OCI/kineapp/node_modules/babel-loader/lib/index.js","mtime":1639687650488},{"path":"/home/lost/Bureau/OCI/kineapp/node_modules/eslint-loader/index.js","mtime":1640273580552}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9sb3N0L0J1cmVhdS9PQ0kva2luZWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanMiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9ob21lL2xvc3QvQnVyZWF1L09DSS9raW5lYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjay5qcyI7CmV4cG9ydCB2YXIgUGF0aWVudCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlQ2xhc3MoZnVuY3Rpb24gUGF0aWVudChpZCwgcHJlbm9tLCBub20sIGFnZSwgaW5mb3JtYXRpb24sIHBhdGhvbG9naWUsIGJpbGFuKSB7CiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFBhdGllbnQpOwoKICB0aGlzLmlkID0gaWQ7CiAgdGhpcy5wcmVub20gPSBwcmVub207CiAgdGhpcy5ub20gPSBub207CiAgdGhpcy5hZ2UgPSBhZ2U7CiAgdGhpcy5pbmZvcm1hdGlvbiA9IGluZm9ybWF0aW9uOwogIHRoaXMucGF0aG9sb2dpZSA9IHBhdGhvbG9naWU7CiAgdGhpcy5iaWxhbiA9IGJpbGFuOwp9KTsKZXhwb3J0IHZhciBQYXRpZW50Q29udmVydGVyID0gewogIHRvRmlyZXN0b3JlOiBmdW5jdGlvbiB0b0ZpcmVzdG9yZShwYXRpZW50KSB7CiAgICByZXR1cm4gewogICAgICBwcmVub206IHBhdGllbnQucHJlbm9tLAogICAgICBub206IHBhdGllbnQubm9tLAogICAgICBhZ2U6IHBhdGllbnQuYWdlLAogICAgICBpbmZvcm1hdGlvbjogcGF0aWVudC5pbmZvcm1hdGlvbiwKICAgICAgcGF0aG9sb2dpZTogcGF0aWVudC5wYXRob2xvZ2llLAogICAgICBiaWxhbjogcGF0aWVudC5iaWxhbgogICAgfTsKICB9LAogIGZyb21GaXJlc3RvcmU6IGZ1bmN0aW9uIGZyb21GaXJlc3RvcmUoc25hcHNob3QsIG9wdGlvbnMpIHsKICAgIHZhciBkYXRhID0gc25hcHNob3QuZGF0YShvcHRpb25zKTsKICAgIHJldHVybiBuZXcgUGF0aWVudChzbmFwc2hvdC5pZCwgZGF0YS5wcmVub20sIGRhdGEubm9tLCBkYXRhLmFnZSwgZGF0YS5pbmZvcm1hdGlvbiwgZGF0YS5wYXRob2xvZ2llLCBkYXRhLmJpbGFuKTsKICB9Cn07"},{"version":3,"sources":["/home/lost/Bureau/OCI/kineapp/src/model/Patient.js"],"names":["Patient","id","prenom","nom","age","information","pathologie","bilan","PatientConverter","toFirestore","patient","fromFirestore","snapshot","options","data"],"mappings":";;AAAA,WAAaA,OAAb,6BACI,iBAAaC,EAAb,EAAiBC,MAAjB,EAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,WAAnC,EAAgDC,UAAhD,EAA6DC,KAA7D,EAAoE;AAAA;;AAChE,OAAKN,EAAL,GAAUA,EAAV;AACA,OAAKC,MAAL,GAAcA,MAAd;AACA,OAAKC,GAAL,GAAWA,GAAX;AACA,OAAKC,GAAL,GAAWA,GAAX;AACA,OAAKC,WAAL,GAAmBA,WAAnB;AACA,OAAKC,UAAL,GAAkBA,UAAlB;AACA,OAAKC,KAAL,GAAaA,KAAb;AACH,CATL;AAYE,OAAO,IAAIC,gBAAgB,GAAG;AAC1BC,EAAAA,WAAW,EAAE,qBAASC,OAAT,EAAkB;AAC3B,WAAO;AACDR,MAAAA,MAAM,EAAEQ,OAAO,CAACR,MADf;AAEDC,MAAAA,GAAG,EAAEO,OAAO,CAACP,GAFZ;AAGDC,MAAAA,GAAG,EAAEM,OAAO,CAACN,GAHZ;AAIDC,MAAAA,WAAW,EAAEK,OAAO,CAACL,WAJpB;AAKDC,MAAAA,UAAU,EAAEI,OAAO,CAACJ,UALnB;AAMDC,MAAAA,KAAK,EAAEG,OAAO,CAACH;AANd,KAAP;AAQH,GAVyB;AAW1BI,EAAAA,aAAa,EAAE,uBAASC,QAAT,EAAmBC,OAAnB,EAA2B;AACtC,QAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAT,CAAcD,OAAd,CAAb;AACA,WAAO,IAAIb,OAAJ,CAAYY,QAAQ,CAACX,EAArB,EAAyBa,IAAI,CAACZ,MAA9B,EAAsCY,IAAI,CAACX,GAA3C,EAAgDW,IAAI,CAACV,GAArD,EAA0DU,IAAI,CAACT,WAA/D,EAA4ES,IAAI,CAACR,UAAjF,EAA6FQ,IAAI,CAACP,KAAlG,CAAP;AACH;AAdyB,CAAvB","sourcesContent":["export class Patient {\n    constructor (id, prenom, nom, age, information ,pathologie , bilan) {\n        this.id = id;\n        this.prenom = prenom;\n        this.nom = nom;\n        this.age = age;\n        this.information = information;\n        this.pathologie = pathologie;\n        this.bilan = bilan;\n    }\n  }\n  \n  export var PatientConverter = {\n      toFirestore: function(patient) {\n          return {\n                prenom: patient.prenom,\n                nom: patient.nom,\n                age: patient.age,\n                information: patient.information,\n                pathologie: patient.pathologie,\n                bilan: patient.bilan\n              };\n      },\n      fromFirestore: function(snapshot, options){\n          const data = snapshot.data(options);\n          return new Patient(snapshot.id, data.prenom, data.nom, data.age, data.information, data.pathologie, data.bilan);\n      }\n  }"]}]}